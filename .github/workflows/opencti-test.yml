name: OpenCTI CI
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  OpenCTI-CI:
    # You need to use the INSTALLATION_NAME from the previous step
    runs-on: arc-runner-set-dev
    container: ubuntu:latest
    steps:
    - name: Display Runner Information
      run: |
          echo "Runner Name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS \t Runner Arch: $RUNNER_ARCH"
          echo "Workflow: ${{ github.workflow }} \t Run ID: ${{ github.run_id }} \t Run Number: ${{ github.run_number }}"

    - name: dependencies-checkout
#      uses: addnab/docker-run-action@v3
#      with:
#        image: aschmelyun/cleaver:latest
#        options: -v ${{ github.workspace }}:/var/www
#        run: |
#          cp -R opencti-platform platform-reference
#          apk add git github-cli
#          chmod 777 scripts/*
#          echo "Launching clonde-dependencies.sh ${GITHUB_HEAD_REF}" "${GITHUB_BASE_REF}" "$(pwd)" "${{ github.event.pull_request.title }}"
#          ./scripts/clone-dependencies.sh "${GITHUB_HEAD_REF}" "${GITHUB_BASE_REF}" "$(pwd)" "${{ github.event.pull_request.title }}"
#          ls -lart
#          cd "$DRONE_WORKSPACE/client-python"
#          echo "[INFO] using client-python on branch $(git branch --show-current)"
#          git log -n 1
      uses: docker://nikolaik/python-nodejs:python3.11-nodejs22-alpine
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        entrypoint: /bin/sh
        args: -c 'echo "hello world" ; 
          cp -R opencti-platform platform-reference; 
          apk add git github-cli; 
          chmod 777 scripts/*; 
          echo "Launching clonde-dependencies.sh ${github.ref}" "${github.head_ref}" "$(pwd)" "${{ github.event.pull_request.title }}" '
    services:
      redis:
        image: redis:8.0.0
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.18.2
        ports:
          - 9200:9200
        options: --health-cmd="curl http://localhost:9200/_cluster/health"
